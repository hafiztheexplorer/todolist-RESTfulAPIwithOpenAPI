openapi: 3.0.3
info:
  title: RESTful API ToDoList App
  description: mencoba membuat RESTful API untuk aplikasi ToDoList
  contact:
    name: Hafiz The Explorer
    url: https://www.hafiztheexplorer.com
    email: hafiz@mail.com
  license:
    name: APACHE 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: "1.0"
externalDocs:
  description: External documentation on Github Hafiz The Explorer
  url: https://github.com/hafiztheexplorer
servers:
- url: "https://{environment}.hafiztheexplorer.com/api/v1/servers"
  description: App ToDoList RESTful API Server
  variables:
    environment:
      description: Server Environment
      default: development
      enum:
      - development
      - qualityassurance
      - production
paths:
  /todolist:
    get:
      tags:
      - ToDoList
      summary: mengambil data todolistnya
      description: "hanya akan mengembalikan data to-do-list yang aktif, data to-do-list\
        \ yang sudah dihapus atau semua data to-do-list tidak akan di return"
      parameters:
      - name: include_done
        in: query
        description: include done todolist dalam hasil
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          nullable: true
          default: true
      - name: name
        in: query
        description: mencari data todolist by name
        required: false
        style: form
        explode: true
        schema:
          maxLength: 100
          minLength: 0
          type: string
          nullable: false
        examples:
          java:
            description: example name Java
            value: example_java
          go:
            description: example name go
            value: example_go
      responses:
        "200":
          description: Get todolist success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/arraytodolist'
              examples:
                success:
                  description: example success get all todolist
                  value:
                  - id: "1"
                    name: go
                    priority: 1
                    tags:
                    - go
                    - programming
                  - id: "2"
                    name: java
                    priority: 2
                    tags:
                    - java
                    - programming
      security:
      - todolistAuth: []
    post:
      tags:
      - ToDoList
      summary: menambah data todolistnya
      description: hanya akan menambah data to-do-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createupdatetodolistwithvalidation'
            examples:
              go:
                description: example post todolist go
                value:
                  name: go
                  priority: 1
                  tags:
                  - go
                  - programming
              java:
                description: example post todolist java
                value:
                  name: java
                  priority: 2
                  tags:
                  - java
                  - programming
        required: true
      responses:
        "200":
          description: success post todolist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showtodolist'
              examples:
                go:
                  description: example success post all todolist
                  value:
                    id: "1"
                    name: go
                    priority: 1
                    tags:
                    - go
                    - programming
                java:
                  description: example success post all todolist
                  value:
                    id: "2"
                    name: java
                    priority: 2
                    tags:
                    - java
                    - programming
      security:
      - todolistAuth: []
  /todolist/{todolistId}:
    put:
      tags:
      - ToDoList
      summary: mengedit data todolistnya
      description: hanya akan mengedit data to-do-list yang dipilih
      parameters:
      - name: todolistId
        in: path
        description: todolist id mana yang diedit
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 100
          minLength: 1
          type: string
          default: masukkan id yang akan diedit/diupdate
        examples:
          go:
            description: sample to do list id for go
            value: "1"
          java:
            description: sample to do list id for java
            value: "2"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createupdatetodolistwithvalidation'
            examples:
              go:
                description: example put to do list go
                value:
                  name: go
                  priority: 1
                  tags:
                  - go
                  - programming
              java:
                description: example put to do list java
                value:
                  name: java
                  priority: 2
                  tags:
                  - java
                  - programming
        required: true
      responses:
        "200":
          description: success put todolist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showtodolist'
              examples:
                go:
                  description: example success put todolist
                  value:
                    id: "1"
                    name: go
                    priority: 1
                    tags:
                    - go
                    - programming
                java:
                  description: example success put todolist
                  value:
                    id: "2"
                    name: java
                    priority: 2
                    tags:
                    - java
                    - programming
      security:
      - todolistAuth: []
    delete:
      tags:
      - ToDoList
      summary: menghapus data todolistnya
      description: hanya akan menghapus data to-do-list yang dipilih
      parameters:
      - name: todolistId
        in: path
        description: todolist id mana yang diedit
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 100
          minLength: 1
          type: string
          default: masukkan id yang akan diedit/diupdate
        examples:
          go:
            description: sample to do list id for go
            value: "1"
          java:
            description: sample to do list id for java
            value: "2"
      responses:
        "200":
          description: success delete todolist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              examples:
                success:
                  description: success delete todolist
                  value:
                    success: true
        "404":
          description: failed delete not found todolist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              examples:
                failed:
                  description: failed delete todolist
                  value:
                    success: false
      security:
      - todolistAuth: []
components:
  schemas:
    showtodolist:
      type: object
      properties:
        id:
          type: string
          description: todolist id
          nullable: false
        name:
          type: string
          description: todolist name
          nullable: false
        priority:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
      example:
        name: name
        id: id
        priority: 0
        tags:
        - tags
        - tags
    createupdatetodolist:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: todolist name
          nullable: false
        priority:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
    createupdatetodolistwithvalidation:
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        priority:
          type: integer
          format: int32
          default: 1
        tags:
          minItems: 1
          type: array
          items:
            minLength: 1
            type: string
    arraytodolist:
      type: array
      items:
        $ref: '#/components/schemas/showtodolist'
      x-schema-name: arraytodolist
    inline_response_200:
      type: object
      properties:
        success:
          type: boolean
      example:
        success: true
  parameters:
    include_done:
      name: include_done
      in: query
      description: include done todolist dalam hasil
      required: false
      style: form
      explode: true
      schema:
        type: boolean
        nullable: true
        default: true
    name:
      name: name
      in: query
      description: mencari data todolist by name
      required: false
      style: form
      explode: true
      schema:
        maxLength: 100
        minLength: 0
        type: string
        nullable: false
      examples:
        java:
          description: example name Java
          value: example_java
        go:
          description: example name go
          value: example_go
    todolistId:
      name: todolistId
      in: path
      description: todolist id mana yang diedit
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 100
        minLength: 1
        type: string
        default: masukkan id yang akan diedit/diupdate
      examples:
        go:
          description: sample to do list id for go
          value: "1"
        java:
          description: sample to do list id for java
          value: "2"
  securitySchemes:
    todolistAuth:
      type: apiKey
      description: Authentication for todolist RESTful API
      name: X-API-Key
      in: header
